
apply plugin: 'android'
apply plugin: 'hugo'

repositories {
    mavenCentral()
    mavenLocal()
}

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.jakewharton.hugo:hugo-plugin:1.1.0'
    }
}

android {
    compileSdkVersion 18
    buildToolsVersion "19.1.0"

    defaultConfig {
        minSdkVersion 18
        targetSdkVersion 18
        versionCode 2
        versionName "0.1.0"
        applicationId "com.cebesius.wifiautoforget"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    signingConfigs {
        release {
            storeFile new File('/path/to/keystore')
            keyAlias 'alias'

            // workarounds so that gradle will allow task installRelease
            storePassword "not-store-password"
            keyPassword "not-key-password"
        }
    }

    buildTypes {
        def BOOLEAN = "boolean"

        def TRUE = "true"
        def FALSE = "false"

        def FIELD_FEATURE_ONBOARDING_ENABLED = "FEATURE_ONBOARDING_ENABLED"
        def FIELD_FEATURE_CRASH_REPORTS_ENABLED = "FEATURE_CRASH_REPORTS_ENABLED"

        debug {
            buildConfigField BOOLEAN, FIELD_FEATURE_ONBOARDING_ENABLED, FALSE
            buildConfigField BOOLEAN, FIELD_FEATURE_CRASH_REPORTS_ENABLED, FALSE
            runProguard true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }

        release {
            buildConfigField BOOLEAN, FIELD_FEATURE_ONBOARDING_ENABLED, FALSE // TODO: implement onboarding feature
            buildConfigField BOOLEAN, FIELD_FEATURE_CRASH_REPORTS_ENABLED, TRUE
            runProguard true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            signingConfig signingConfigs.release
        }

        sourceSets.androidTest.setRoot('src/test')
    }
}

def runTasks = gradle.startParameter.taskNames
if ('assembleRelease' in runTasks || 'installRelease' in runTasks) {
    // acquire store password
    def storePassword = new String(System.console().readPassword('\nkeystore password: '))
    android.signingConfigs.release.storePassword = storePassword

    // acquire release key password
    def keyPassword = new String(System.console().readPassword('release key password: '))
    android.signingConfigs.release.keyPassword = keyPassword
}

apply plugin: 'android-unit-test'

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile group: 'com.activeandroid', name: 'activeandroid', version: '3.1-SNAPSHOT'

    compile 'ch.acra:acra:4.5.+'
    compile 'com.squareup:otto:1.3.+'
    compile 'com.jakewharton:butterknife:5.1.+'

    testCompile 'junit:junit:4.10'
    testCompile 'org.robolectric:robolectric:2.3'
    testCompile 'org.mockito:mockito-all:1.9.5'

    // To make gradle recognize dependencies
    androidTestCompile configurations.testCompile.dependencies
}
